{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\erosa\\\\Desktop\\\\Projects\\\\React\\\\brewery-search\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\erosa\\\\Desktop\\\\Projects\\\\React\\\\brewery-search\\\\client\\\\src\\\\components\\\\breweries\\\\Search.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Alert from \"../layout/Alert\";\nimport AutoComplete from \"../layout/AutoComplete\";\nimport ReactAutoComplete from \"react-autocomplete\";\nimport BreweryContext from \"../../context/brewery/breweryContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\nimport BreweryURLBuilder from \"../../utils/BreweryURLBuilder\";\n\nconst Search = () => {\n  const breweryContext = useContext(BreweryContext);\n  const alertContext = useContext(AlertContext);\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const searchBreweries = breweryContext.searchBreweries,\n        searchAutoComplete = breweryContext.searchAutoComplete,\n        getUserLocation = breweryContext.getUserLocation,\n        clearBreweries = breweryContext.clearBreweries,\n        breweries = breweryContext.breweries,\n        loading = breweryContext.loading,\n        suggestions = breweryContext.suggestions;\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(pos => {\n        let lat = pos.coords.latitude;\n        let long = pos.coords.longitude;\n        getUserLocation(lat, long);\n      }, error => {\n        console.error(error);\n      });\n    } else {\n      console.error(\"Blocked by client\");\n    }\n  }, []);\n\n  const onChange = e => {\n    setText(e.target.value);\n    searchAutoComplete(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === \"\") {\n      alertContext.setAlert(\"Please enter something\", \"warning\");\n    } else {\n      const url = new BreweryURLBuilder().setText(text);\n      searchBreweries(url.getUrl());\n      setText(\"\");\n    }\n  };\n\n  const clearAll = () => {\n    clearBreweries();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container mt-1 mb-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"/>\", React.createElement(ReactAutoComplete // getItemValue={item => item.name}\n  , {\n    className: \"form-control mb-2\",\n    items: suggestions,\n    renderItem: (item, isHighlighted) => React.createElement(\"div\", {\n      style: {\n        background: isHighlighted ? \"lightgray\" : \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, item.name),\n    value: text,\n    onChange: e => value => e.target.value // onSelect={e => value = val}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"row m-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-primary col-md-6 col-sm-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), breweries.length > 0 && React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Clear All\",\n    className: \"btn btn-danger col-md-6 col-sm-12\",\n    onClick: clearAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }))));\n};\n\nexport default Search;","map":{"version":3,"sources":["C:\\Users\\erosa\\Desktop\\Projects\\React\\brewery-search\\client\\src\\components\\breweries\\Search.js"],"names":["React","useState","useContext","useEffect","Alert","AutoComplete","ReactAutoComplete","BreweryContext","AlertContext","BreweryURLBuilder","Search","breweryContext","alertContext","text","setText","searchBreweries","searchAutoComplete","getUserLocation","clearBreweries","breweries","loading","suggestions","navigator","geolocation","getCurrentPosition","pos","lat","coords","latitude","long","longitude","error","console","onChange","e","target","value","onSubmit","preventDefault","setAlert","url","getUrl","clearAll","item","isHighlighted","background","name","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,iBAAP,MAA8B,oBAA9B;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,cAAc,GAAGT,UAAU,CAACK,cAAD,CAAjC;AACA,QAAMK,YAAY,GAAGV,UAAU,CAACM,YAAD,CAA/B;;AAFmB,oBAIKP,QAAQ,CAAC,EAAD,CAJb;AAAA;AAAA,QAIZY,IAJY;AAAA,QAINC,OAJM;;AAAA,QAOjBC,eAPiB,GAcfJ,cAde,CAOjBI,eAPiB;AAAA,QAQjBC,kBARiB,GAcfL,cAde,CAQjBK,kBARiB;AAAA,QASjBC,eATiB,GAcfN,cAde,CASjBM,eATiB;AAAA,QAUjBC,cAViB,GAcfP,cAde,CAUjBO,cAViB;AAAA,QAWjBC,SAXiB,GAcfR,cAde,CAWjBQ,SAXiB;AAAA,QAYjBC,OAZiB,GAcfT,cAde,CAYjBS,OAZiB;AAAA,QAajBC,WAbiB,GAcfV,cAde,CAajBU,WAbiB;AAgBnBlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,iBAAiBmB,SAArB,EAAgC;AAC9BA,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACEC,GAAG,IAAI;AACL,YAAIC,GAAG,GAAGD,GAAG,CAACE,MAAJ,CAAWC,QAArB;AACA,YAAIC,IAAI,GAAGJ,GAAG,CAACE,MAAJ,CAAWG,SAAtB;AACAb,QAAAA,eAAe,CAACS,GAAD,EAAMG,IAAN,CAAf;AACD,OALH,EAMEE,KAAK,IAAI;AACPC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,OARH;AAUD,KAXD,MAWO;AACLC,MAAAA,OAAO,CAACD,KAAR,CAAc,mBAAd;AACD;AACF,GAfQ,EAeN,EAfM,CAAT;;AAiBA,QAAME,QAAQ,GAAGC,CAAC,IAAI;AACpBpB,IAAAA,OAAO,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACApB,IAAAA,kBAAkB,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAGH,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIzB,IAAI,KAAK,EAAb,EAAiB;AACfD,MAAAA,YAAY,CAAC2B,QAAb,CAAsB,wBAAtB,EAAgD,SAAhD;AACD,KAFD,MAEO;AACL,YAAMC,GAAG,GAAG,IAAI/B,iBAAJ,GAAwBK,OAAxB,CAAgCD,IAAhC,CAAZ;AACAE,MAAAA,eAAe,CAACyB,GAAG,CAACC,MAAJ,EAAD,CAAf;AACA3B,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GATD;;AAWA,QAAM4B,QAAQ,GAAG,MAAM;AACrBxB,IAAAA,cAAc;AACf,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEmB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WASE,oBAAC,iBAAD,CACE;AADF;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,KAAK,EAAEhB,WAHT;AAIE,IAAA,UAAU,EAAE,CAACsB,IAAD,EAAOC,aAAP,KACV;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAED,aAAa,GAAG,WAAH,GAAiB;AAA5C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACG,IADR,CALJ;AASE,IAAA,KAAK,EAAEjC,IATT;AAUE,IAAA,QAAQ,EAAEqB,CAAC,IAAIE,KAAK,IAAIF,CAAC,CAACC,MAAF,CAASC,KAVnC,CAWE;AAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAsBE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,oCAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGjB,SAAS,CAAC4B,MAAV,GAAmB,CAAnB,IACC;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,SAAS,EAAC,mCAHZ;AAIE,IAAA,OAAO,EAAEL,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAtBF,CAFF,CADF;AA4CD,CAjGD;;AAmGA,eAAehC,MAAf","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport Alert from \"../layout/Alert\";\r\nimport AutoComplete from \"../layout/AutoComplete\";\r\nimport ReactAutoComplete from \"react-autocomplete\";\r\nimport BreweryContext from \"../../context/brewery/breweryContext\";\r\nimport AlertContext from \"../../context/alert/alertContext\";\r\nimport BreweryURLBuilder from \"../../utils/BreweryURLBuilder\";\r\n\r\nconst Search = () => {\r\n  const breweryContext = useContext(BreweryContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const {\r\n    searchBreweries,\r\n    searchAutoComplete,\r\n    getUserLocation,\r\n    clearBreweries,\r\n    breweries,\r\n    loading,\r\n    suggestions\r\n  } = breweryContext;\r\n\r\n  useEffect(() => {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        pos => {\r\n          let lat = pos.coords.latitude;\r\n          let long = pos.coords.longitude;\r\n          getUserLocation(lat, long);\r\n        },\r\n        error => {\r\n          console.error(error);\r\n        }\r\n      );\r\n    } else {\r\n      console.error(\"Blocked by client\");\r\n    }\r\n  }, []);\r\n\r\n  const onChange = e => {\r\n    setText(e.target.value);\r\n    searchAutoComplete(e.target.value);\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (text === \"\") {\r\n      alertContext.setAlert(\"Please enter something\", \"warning\");\r\n    } else {\r\n      const url = new BreweryURLBuilder().setText(text);\r\n      searchBreweries(url.getUrl());\r\n      setText(\"\");\r\n    }\r\n  };\r\n\r\n  const clearAll = () => {\r\n    clearBreweries();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-1 mb-2\">\r\n      <Alert />\r\n      <form className=\"form\" onSubmit={onSubmit}>\r\n        {/* <input\r\n          type=\"text\"\r\n          name=\"text\"\r\n          value={text}\r\n          className=\"form-control mb-2\"\r\n          placeholder=\"Search Breweries...\"\r\n          onChange={onChange} */}\r\n        />\r\n        <ReactAutoComplete\r\n          // getItemValue={item => item.name}\r\n          className=\"form-control mb-2\"\r\n          items={suggestions}\r\n          renderItem={(item, isHighlighted) => (\r\n            <div style={{ background: isHighlighted ? \"lightgray\" : \"white\" }}>\r\n              {item.name}\r\n            </div>\r\n          )}\r\n          value={text}\r\n          onChange={e => value => e.target.value}\r\n          // onSelect={e => value = val}\r\n        />\r\n        <div className=\"row m-1\">\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Search\"\r\n            className=\"btn btn-primary col-md-6 col-sm-12\"\r\n          />\r\n          {/* <div className=\"divider\"></div> */}\r\n          {breweries.length > 0 && (\r\n            <input\r\n              type=\"button\"\r\n              value=\"Clear All\"\r\n              className=\"btn btn-danger col-md-6 col-sm-12\"\r\n              onClick={clearAll}\r\n            />\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}