{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\erosa\\\\Desktop\\\\Projects\\\\React\\\\brewery-search\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\erosa\\\\Desktop\\\\Projects\\\\React\\\\brewery-search\\\\client\\\\src\\\\components\\\\layout\\\\GoogleMap.js\";\nimport React, { useState } from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\n\nconst GoogleMap = props => {\n  //Hides or the shows the infoWindow\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showingInfoWindow = _useState2[0],\n        setShowingInfoWindow = _useState2[1]; //Shows the active marker upon click\n\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        activeMarker = _useState4[0],\n        setActiveMarker = _useState4[1]; //Shows the infoWindow to the selected place upon a marker\n\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedPlace = _useState6[0],\n        setSelectedPlace = _useState6[1];\n\n  const onMarkerClick = (props, marker, e) => {\n    // e.preventDefault();\n    setSelectedPlace(props);\n    setActiveMarker(marker);\n    setShowingInfoWindow(true);\n  };\n\n  const onClose = () => {\n    if (showingInfoWindow) {\n      setActiveMarker(null);\n      setShowingInfoWindow(false);\n    }\n  };\n\n  return React.createElement(Map, {\n    google: props.google,\n    zoom: 14,\n    stlye: styles,\n    initialCenter: {\n      lat: props.latitude,\n      lng: props.longitude\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Marker, {\n    onClick: onMarkerClick,\n    name: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(InfoWindow, {\n    marker: activeMarker,\n    visible: showingInfoWindow,\n    onClose: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, selectedPlace.name))));\n};\n\nconst styles = {\n  width: \"90%\",\n  height: \"90%\"\n};\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDszS9vH_VpB6mumst6qwxOXfOAIqpcXpg\"\n})(GoogleMap);","map":{"version":3,"sources":["C:\\Users\\erosa\\Desktop\\Projects\\React\\brewery-search\\client\\src\\components\\layout\\GoogleMap.js"],"names":["React","useState","Map","GoogleApiWrapper","InfoWindow","Marker","GoogleMap","props","showingInfoWindow","setShowingInfoWindow","activeMarker","setActiveMarker","selectedPlace","setSelectedPlace","onMarkerClick","marker","e","onClose","google","styles","lat","latitude","lng","longitude","name","width","height","apiKey"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,UAAhC,EAA4CC,MAA5C,QAA0D,mBAA1D;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB;AADyB,oBAEyBN,QAAQ,CAAC,KAAD,CAFjC;AAAA;AAAA,QAElBO,iBAFkB;AAAA,QAECC,oBAFD,kBAIzB;;;AAJyB,qBAKeR,QAAQ,CAAC,EAAD,CALvB;AAAA;AAAA,QAKlBS,YALkB;AAAA,QAKJC,eALI,kBAOzB;;;AAPyB,qBAQiBV,QAAQ,CAAC,EAAD,CARzB;AAAA;AAAA,QAQlBW,aARkB;AAAA,QAQHC,gBARG;;AAUzB,QAAMC,aAAa,GAAG,CAACP,KAAD,EAAQQ,MAAR,EAAgBC,CAAhB,KAAsB;AAC1C;AACAH,IAAAA,gBAAgB,CAACN,KAAD,CAAhB;AACAI,IAAAA,eAAe,CAACI,MAAD,CAAf;AACAN,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,GALD;;AAOA,QAAMQ,OAAO,GAAG,MAAM;AACpB,QAAIT,iBAAJ,EAAuB;AACrBG,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD;AACF,GALD;;AAOA,SACE,oBAAC,GAAD;AACE,IAAA,MAAM,EAAEF,KAAK,CAACW,MADhB;AAEE,IAAA,IAAI,EAAE,EAFR;AAGE,IAAA,KAAK,EAAEC,MAHT;AAIE,IAAA,aAAa,EAAE;AACbC,MAAAA,GAAG,EAAEb,KAAK,CAACc,QADE;AAEbC,MAAAA,GAAG,EAAEf,KAAK,CAACgB;AAFE,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAET,aAAjB;AAAgC,IAAA,IAAI,EAAEP,KAAK,CAACiB,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,oBAAC,UAAD;AACE,IAAA,MAAM,EAAEd,YADV;AAEE,IAAA,OAAO,EAAEF,iBAFX;AAGE,IAAA,OAAO,EAAES,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,aAAa,CAACY,IAAnB,CADF,CALF,CAVF,CADF;AAsBD,CA9CD;;AAgDA,MAAML,MAAM,GAAG;AACbM,EAAAA,KAAK,EAAE,KADM;AAEbC,EAAAA,MAAM,EAAE;AAFK,CAAf;AAKA,eAAevB,gBAAgB,CAAC;AAC9BwB,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZrB,SAFY,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\r\n\r\nconst GoogleMap = props => {\r\n  //Hides or the shows the infoWindow\r\n  const [showingInfoWindow, setShowingInfoWindow] = useState(false);\r\n\r\n  //Shows the active marker upon click\r\n  const [activeMarker, setActiveMarker] = useState({});\r\n\r\n  //Shows the infoWindow to the selected place upon a marker\r\n  const [selectedPlace, setSelectedPlace] = useState({});\r\n\r\n  const onMarkerClick = (props, marker, e) => {\r\n    // e.preventDefault();\r\n    setSelectedPlace(props);\r\n    setActiveMarker(marker);\r\n    setShowingInfoWindow(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    if (showingInfoWindow) {\r\n      setActiveMarker(null);\r\n      setShowingInfoWindow(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Map\r\n      google={props.google}\r\n      zoom={14}\r\n      stlye={styles}\r\n      initialCenter={{\r\n        lat: props.latitude,\r\n        lng: props.longitude\r\n      }}\r\n    >\r\n      <Marker onClick={onMarkerClick} name={props.name} />\r\n      <InfoWindow\r\n        marker={activeMarker}\r\n        visible={showingInfoWindow}\r\n        onClose={onClose}\r\n      >\r\n        <div>\r\n          <h4>{selectedPlace.name}</h4>\r\n        </div>\r\n      </InfoWindow>\r\n    </Map>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  width: \"90%\",\r\n  height: \"90%\"\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyDszS9vH_VpB6mumst6qwxOXfOAIqpcXpg\"\r\n})(GoogleMap);\r\n"]},"metadata":{},"sourceType":"module"}