{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\erosa\\\\Desktop\\\\Projects\\\\React\\\\brewery-search\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SEARCH_BREWERIES, SET_LOADING, CLEAR_BREWERIES } from \"./types\";\nexport default ((state, action) => {\n  switch (action.type) {\n    case SEARCH_BREWERIES:\n      return _objectSpread({}, state, {\n        breweries: action.payload,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\Users\\erosa\\Desktop\\Projects\\React\\brewery-search\\src\\context\\brewery\\breweryReducer.js"],"names":["SEARCH_BREWERIES","SET_LOADING","CLEAR_BREWERIES","state","action","type","breweries","payload","loading"],"mappings":";;;;;;AAAA,SAASA,gBAAT,EAA2BC,WAA3B,EAAwCC,eAAxC,QAA+D,SAA/D;AAEA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,gBAAL;AACE,+BACKG,KADL;AAEEG,QAAAA,SAAS,EAAEF,MAAM,CAACG,OAFpB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF;AACE,aAAOL,KAAP;AARJ;AAUD,CAXD","sourcesContent":["import { SEARCH_BREWERIES, SET_LOADING, CLEAR_BREWERIES } from \"./types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_BREWERIES:\r\n      return {\r\n        ...state,\r\n        breweries: action.payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}