{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\erosa\\\\Desktop\\\\Projects\\\\React\\\\brewery-search\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\erosa\\\\Desktop\\\\Projects\\\\React\\\\brewery-search\\\\src\\\\context\\\\brewery\\\\BreweryState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport BreweryContext from \"./breweryContext\";\nimport BreweryReducer from \"./breweryReducer\";\nimport { SEARCH_BREWERIES, SET_LOADING, CLEAR_BREWERIES } from \"../types\";\n\nconst BreweryState = props => {\n  const initialState = {\n    breweries: [],\n    brewery: {},\n    loading: false\n  };\n\n  const _useReducer = useReducer(BreweryReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const searchBreweries = async text => {// setLoading();\n    // const res = await axios.get(\n    //   `https://api.openbrewerydb.org/breweries?by_name=${text}`\n    // );\n    // dispatch({\n    //   type: SEARCH_BREWERIES,\n    //   payload: res\n    // });\n  };\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return React.createElement(BreweryContext.Provider, {\n    value: {\n      breweries: state.breweries,\n      brewery: state.brewery,\n      loading: state.loading,\n      searchBreweries\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n};\n\nexport default BreweryState;","map":{"version":3,"sources":["C:\\Users\\erosa\\Desktop\\Projects\\React\\brewery-search\\src\\context\\brewery\\BreweryState.js"],"names":["React","useReducer","axios","BreweryContext","BreweryReducer","SEARCH_BREWERIES","SET_LOADING","CLEAR_BREWERIES","BreweryState","props","initialState","breweries","brewery","loading","state","dispatch","searchBreweries","text","setLoading","type"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,gBAAT,EAA2BC,WAA3B,EAAwCC,eAAxC,QAA+D,UAA/D;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,SAAS,EAAE,EADQ;AAEnBC,IAAAA,OAAO,EAAE,EAFU;AAGnBC,IAAAA,OAAO,EAAE;AAHU,GAArB;;AAD4B,sBAOFZ,UAAU,CAACG,cAAD,EAAiBM,YAAjB,CAPR;AAAA;AAAA,QAOrBI,KAPqB;AAAA,QAOdC,QAPc;;AAS5B,QAAMC,eAAe,GAAG,MAAMC,IAAN,IAAc,CACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GATD;;AAWA,QAAMC,UAAU,GAAG,MAAMH,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEb;AAAR,GAAD,CAAjC;;AAEA,SACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,SAAS,EAAEG,KAAK,CAACH,SADZ;AAELC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAFV;AAGLC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAHV;AAILG,MAAAA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CAhCD;;AAkCA,eAAeR,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport BreweryContext from \"./breweryContext\";\r\nimport BreweryReducer from \"./breweryReducer\";\r\nimport { SEARCH_BREWERIES, SET_LOADING, CLEAR_BREWERIES } from \"../types\";\r\n\r\nconst BreweryState = props => {\r\n  const initialState = {\r\n    breweries: [],\r\n    brewery: {},\r\n    loading: false\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(BreweryReducer, initialState);\r\n\r\n  const searchBreweries = async text => {\r\n    // setLoading();\r\n    // const res = await axios.get(\r\n    //   `https://api.openbrewerydb.org/breweries?by_name=${text}`\r\n    // );\r\n    // dispatch({\r\n    //   type: SEARCH_BREWERIES,\r\n    //   payload: res\r\n    // });\r\n  };\r\n\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  return (\r\n    <BreweryContext.Provider\r\n      value={{\r\n        breweries: state.breweries,\r\n        brewery: state.brewery,\r\n        loading: state.loading,\r\n        searchBreweries\r\n      }}\r\n    ></BreweryContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BreweryState;\r\n"]},"metadata":{},"sourceType":"module"}