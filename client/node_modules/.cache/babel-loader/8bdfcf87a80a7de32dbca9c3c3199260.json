{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\erosa\\\\Desktop\\\\Projects\\\\React\\\\brewery-search\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\erosa\\\\Desktop\\\\Projects\\\\React\\\\brewery-search\\\\client\\\\src\\\\components\\\\layout\\\\GoogleMap.js\";\nimport React, { useState } from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\n\nconst GoogleMap = () => {\n  //Hides or the shows the infoWindow\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showingInfoWindow = _useState2[0],\n        setShowingInfoWindow = _useState2[1]; //Shows the active marker upon click\n\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        activeMarker = _useState4[0],\n        setActiveMarker = _useState4[1]; //Shows the infoWindow to the selected place upon a marker\n\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedPlace = _useState6[0],\n        setSelectedPlace = _useState6[1];\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  };\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  return React.createElement(Map, {\n    google: this.props.google,\n    zoom: 14,\n    stlye: styles,\n    initialCenter: {\n      lat: this.props.latitude,\n      lng: this.props.longitude\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Marker, {\n    onClick: this.onMarkerClick,\n    name: this.props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(InfoWindow, {\n    marker: this.state.activeMarker,\n    visible: this.state.showingInfoWindow,\n    onClose: this.onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, this.state.selectedPlace.name))));\n};\n\nconst styles = {\n  width: \"90%\",\n  height: \"90%\"\n};\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDszS9vH_VpB6mumst6qwxOXfOAIqpcXpg\"\n})(GoogleMap);","map":{"version":3,"sources":["C:\\Users\\erosa\\Desktop\\Projects\\React\\brewery-search\\client\\src\\components\\layout\\GoogleMap.js"],"names":["React","useState","Map","GoogleApiWrapper","InfoWindow","Marker","GoogleMap","showingInfoWindow","setShowingInfoWindow","activeMarker","setActiveMarker","selectedPlace","setSelectedPlace","onMarkerClick","props","marker","e","setState","onClose","state","google","styles","lat","latitude","lng","longitude","name","width","height","apiKey"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,UAAhC,EAA4CC,MAA5C,QAA0D,mBAA1D;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB;AADsB,oBAE4BL,QAAQ,CAAC,KAAD,CAFpC;AAAA;AAAA,QAEfM,iBAFe;AAAA,QAEIC,oBAFJ,kBAItB;;;AAJsB,qBAKkBP,QAAQ,CAAC,EAAD,CAL1B;AAAA;AAAA,QAKfQ,YALe;AAAA,QAKDC,eALC,kBAOtB;;;AAPsB,qBAQoBT,QAAQ,CAAC,EAAD,CAR5B;AAAA;AAAA,QAQfU,aARe;AAAA,QAQAC,gBARA;;AAUtBC,EAAAA,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,CAAhB,KAAsB;AACpC,SAAKC,QAAL,CAAc;AACZN,MAAAA,aAAa,EAAEG,KADH;AAEZL,MAAAA,YAAY,EAAEM,MAFF;AAGZR,MAAAA,iBAAiB,EAAE;AAHP,KAAd;AAKD,GAND;;AAQAW,EAAAA,OAAO,GAAGJ,KAAK,IAAI;AACjB,QAAI,KAAKK,KAAL,CAAWZ,iBAAf,EAAkC;AAChC,WAAKU,QAAL,CAAc;AACZV,QAAAA,iBAAiB,EAAE,KADP;AAEZE,QAAAA,YAAY,EAAE;AAFF,OAAd;AAID;AACF,GAPD;;AASA,SACE,oBAAC,GAAD;AACE,IAAA,MAAM,EAAE,KAAKK,KAAL,CAAWM,MADrB;AAEE,IAAA,IAAI,EAAE,EAFR;AAGE,IAAA,KAAK,EAAEC,MAHT;AAIE,IAAA,aAAa,EAAE;AACbC,MAAAA,GAAG,EAAE,KAAKR,KAAL,CAAWS,QADH;AAEbC,MAAAA,GAAG,EAAE,KAAKV,KAAL,CAAWW;AAFH,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,KAAKZ,aAAtB;AAAqC,IAAA,IAAI,EAAE,KAAKC,KAAL,CAAWY,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,oBAAC,UAAD;AACE,IAAA,MAAM,EAAE,KAAKP,KAAL,CAAWV,YADrB;AAEE,IAAA,OAAO,EAAE,KAAKU,KAAL,CAAWZ,iBAFtB;AAGE,IAAA,OAAO,EAAE,KAAKW,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,KAAKC,KAAL,CAAWR,aAAX,CAAyBe,IAA9B,CADF,CALF,CAVF,CADF;AAsBD,CAjDD;;AAmDA,MAAML,MAAM,GAAG;AACbM,EAAAA,KAAK,EAAE,KADM;AAEbC,EAAAA,MAAM,EAAE;AAFK,CAAf;AAKA,eAAezB,gBAAgB,CAAC;AAC9B0B,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZvB,SAFY,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\r\n\r\nconst GoogleMap = () => {\r\n  //Hides or the shows the infoWindow\r\n  const [showingInfoWindow, setShowingInfoWindow] = useState(false);\r\n\r\n  //Shows the active marker upon click\r\n  const [activeMarker, setActiveMarker] = useState({});\r\n\r\n  //Shows the infoWindow to the selected place upon a marker\r\n  const [selectedPlace, setSelectedPlace] = useState({});\r\n\r\n  onMarkerClick = (props, marker, e) => {\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true\r\n    });\r\n  };\r\n\r\n  onClose = props => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Map\r\n      google={this.props.google}\r\n      zoom={14}\r\n      stlye={styles}\r\n      initialCenter={{\r\n        lat: this.props.latitude,\r\n        lng: this.props.longitude\r\n      }}\r\n    >\r\n      <Marker onClick={this.onMarkerClick} name={this.props.name} />\r\n      <InfoWindow\r\n        marker={this.state.activeMarker}\r\n        visible={this.state.showingInfoWindow}\r\n        onClose={this.onClose}\r\n      >\r\n        <div>\r\n          <h4>{this.state.selectedPlace.name}</h4>\r\n        </div>\r\n      </InfoWindow>\r\n    </Map>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  width: \"90%\",\r\n  height: \"90%\"\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyDszS9vH_VpB6mumst6qwxOXfOAIqpcXpg\"\r\n})(GoogleMap);\r\n"]},"metadata":{},"sourceType":"module"}