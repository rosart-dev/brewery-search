{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\erosa\\\\Desktop\\\\Projects\\\\React\\\\brewery-search\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\erosa\\\\Desktop\\\\Projects\\\\React\\\\brewery-search\\\\client\\\\src\\\\context\\\\brewery\\\\BreweryState.js\";\nimport React, { useReducer, useContext } from \"react\";\nimport axios from \"axios\";\nimport BreweryContext from \"./breweryContext\";\nimport BreweryReducer from \"./breweryReducer\";\nimport AlertContext from \"../../context/alert/alertContext\";\nimport { SEARCH_BREWERIES, GET_BREWERY, SET_LOADING, CLEAR_BREWERIES, GET_LOCATION } from \"../types\";\nimport BreweryURLBuilder from \"../../utils/BreweryURLBuilder\";\n\nconst BreweryState = props => {\n  const initialState = {\n    breweries: [],\n    brewery: {},\n    loading: false\n  };\n\n  const _useReducer = useReducer(BreweryReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const searchBreweries = async url => {\n    setLoading();\n    const res = await axios.get(url);\n\n    if (res.data.length === 0) {// if (!loading && breweries.length === 0) {\n      //   alertContext.setAlert(\n      //     \"Sorry, we could not find breweries for what you're looking for. Please try another search term.\",\n      //     \"warning\"\n      //   );\n      // }\n    }\n\n    dispatch({\n      type: SEARCH_BREWERIES,\n      payload: res.data\n    });\n  };\n\n  const getUserLocation = async (lat, long) => {\n    setLoading();\n    const res = await axios.get(\"https://maps.googleapis.com/maps/api/geocode/json?latlng=\".concat(lat, \",\").concat(long, \"&key=AIzaSyDszS9vH_VpB6mumst6qwxOXfOAIqpcXpg\"));\n    let city = res.data.results[0].address_components[3].long_name.toLowerCase().replace(\"the \", \"\");\n    let state = res.data.results[0].address_components[5].long_name.toLowerCase().replace(\" \", \"_\");\n    const url = new BreweryURLBuilder().setCity(city).setState(state);\n    searchBreweries(url.getUrl());\n  };\n\n  const getBrewery = async id => {\n    setLoading();\n    const res = await axios.get(\"https://api.openbrewerydb.org/breweries/\".concat(id));\n    dispatch({\n      type: GET_BREWERY,\n      payload: res.data\n    });\n  };\n\n  const clearBreweries = () => {\n    dispatch({\n      type: CLEAR_BREWERIES\n    });\n  };\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return React.createElement(BreweryContext.Provider, {\n    value: {\n      breweries: state.breweries,\n      brewery: state.brewery,\n      loading: state.loading,\n      searchBreweries,\n      getUserLocation,\n      getBrewery,\n      clearBreweries\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default BreweryState;","map":{"version":3,"sources":["C:\\Users\\erosa\\Desktop\\Projects\\React\\brewery-search\\client\\src\\context\\brewery\\BreweryState.js"],"names":["React","useReducer","useContext","axios","BreweryContext","BreweryReducer","AlertContext","SEARCH_BREWERIES","GET_BREWERY","SET_LOADING","CLEAR_BREWERIES","GET_LOCATION","BreweryURLBuilder","BreweryState","props","initialState","breweries","brewery","loading","state","dispatch","searchBreweries","url","setLoading","res","get","data","length","type","payload","getUserLocation","lat","long","city","results","address_components","long_name","toLowerCase","replace","setCity","setState","getUrl","getBrewery","id","clearBreweries","children"],"mappings":"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","sourcesContent":["import React, { useReducer, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport BreweryContext from \"./breweryContext\";\r\nimport BreweryReducer from \"./breweryReducer\";\r\nimport AlertContext from \"../../context/alert/alertContext\";\r\nimport {\r\n  SEARCH_BREWERIES,\r\n  GET_BREWERY,\r\n  SET_LOADING,\r\n  CLEAR_BREWERIES,\r\n  GET_LOCATION\r\n} from \"../types\";\r\n\r\nimport BreweryURLBuilder from \"../../utils/BreweryURLBuilder\";\r\n\r\nconst BreweryState = props => {\r\n  const initialState = {\r\n    breweries: [],\r\n    brewery: {},\r\n    loading: false\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(BreweryReducer, initialState);\r\n\r\n  const searchBreweries = async url => {\r\n    setLoading();\r\n    const res = await axios.get(url);\r\n    if (res.data.length === 0) {\r\n      // if (!loading && breweries.length === 0) {\r\n      //   alertContext.setAlert(\r\n      //     \"Sorry, we could not find breweries for what you're looking for. Please try another search term.\",\r\n      //     \"warning\"\r\n      //   );\r\n      // }\r\n    }\r\n    dispatch({\r\n      type: SEARCH_BREWERIES,\r\n      payload: res.data\r\n    });\r\n  };\r\n\r\n  const getUserLocation = async (lat, long) => {\r\n    setLoading();\r\n    const res = await axios.get(\r\n      `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}&key=AIzaSyDszS9vH_VpB6mumst6qwxOXfOAIqpcXpg`\r\n    );\r\n\r\n    let city = res.data.results[0].address_components[3].long_name\r\n      .toLowerCase()\r\n      .replace(\"the \", \"\");\r\n    let state = res.data.results[0].address_components[5].long_name\r\n      .toLowerCase()\r\n      .replace(\" \", \"_\");\r\n\r\n    const url = new BreweryURLBuilder().setCity(city).setState(state);\r\n\r\n    searchBreweries(url.getUrl());\r\n  };\r\n\r\n  const getBrewery = async id => {\r\n    setLoading();\r\n    const res = await axios.get(\r\n      `https://api.openbrewerydb.org/breweries/${id}`\r\n    );\r\n    dispatch({\r\n      type: GET_BREWERY,\r\n      payload: res.data\r\n    });\r\n  };\r\n\r\n  const clearBreweries = () => {\r\n    dispatch({ type: CLEAR_BREWERIES });\r\n  };\r\n\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  return (\r\n    <BreweryContext.Provider\r\n      value={{\r\n        breweries: state.breweries,\r\n        brewery: state.brewery,\r\n        loading: state.loading,\r\n        searchBreweries,\r\n        getUserLocation,\r\n        getBrewery,\r\n        clearBreweries\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BreweryContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BreweryState;\r\n"]},"metadata":{},"sourceType":"module"}